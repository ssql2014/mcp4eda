/* Generated by Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 17.0.0 -fPIC -O3) */

module counter(clk, rst, count);
  wire [7:0] _00_;
  wire [7:0] _01_;
  wire [7:0] _02_;
  wire _03_;
  wire _04_;
  input clk;
  wire clk;
  output [7:0] count;
  reg [7:0] count;
  input rst;
  wire rst;
  always @(posedge clk, posedge rst)
    if (rst) count[0] <= 1'h0;
    else count[0] <= _01_[0];
  always @(posedge clk, posedge rst)
    if (rst) count[1] <= 1'h0;
    else count[1] <= _02_[1];
  always @(posedge clk, posedge rst)
    if (rst) count[2] <= 1'h0;
    else count[2] <= _02_[2];
  always @(posedge clk, posedge rst)
    if (rst) count[3] <= 1'h0;
    else count[3] <= _02_[3];
  always @(posedge clk, posedge rst)
    if (rst) count[4] <= 1'h0;
    else count[4] <= _02_[4];
  always @(posedge clk, posedge rst)
    if (rst) count[5] <= 1'h0;
    else count[5] <= _02_[5];
  always @(posedge clk, posedge rst)
    if (rst) count[6] <= 1'h0;
    else count[6] <= _02_[6];
  always @(posedge clk, posedge rst)
    if (rst) count[7] <= 1'h0;
    else count[7] <= _02_[7];
  assign _01_[0] = ~count[0];
  assign _02_[1] = count[1] ^ count[0];
  assign _02_[2] = count[2] ^ _00_[1];
  assign _02_[3] = count[3] ^ _00_[2];
  assign _02_[4] = count[4] ^ _00_[3];
  assign _02_[5] = count[5] ^ _00_[4];
  assign _02_[6] = count[6] ^ _00_[5];
  assign _02_[7] = count[7] ^ _00_[6];
  assign _00_[1] = count[1] & count[0];
  assign _00_[3] = _03_ & _00_[1];
  assign _03_ = count[3] & count[2];
  assign _04_ = count[5] & count[4];
  assign _00_[5] = _04_ & _00_[3];
  assign _00_[2] = count[2] & _00_[1];
  assign _00_[4] = count[4] & _00_[3];
  assign _00_[6] = count[6] & _00_[5];
  assign _00_[0] = count[0];
  assign _01_[7:1] = count[7:1];
  assign _02_[0] = _01_[0];
endmodule
